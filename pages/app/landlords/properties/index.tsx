import {
  Button,
  Col,
  Container,
  Form,
  ListGroup,
  Modal,
  Row,
} from "react-bootstrap";
import Head from "next/head";

import Layout from "@/components/Layout";
import SessionGuard from "@/components/SessionGuard";
import { useState } from "react";

import { useQuery, gql, useMutation } from "@apollo/client";

export default function Properties() {
  const GET_PROPERTIES = gql`
    {
      result: getProperties {
        address
      }
    }
  `;

  const { data, loading, error } = useQuery(GET_PROPERTIES);
  const [addProperty] = useMutation(gql`
    mutation AddProperty($address: String) {
      addProperty(address: $address) {
        address
      }
    }
  `);

  const DEFAULT_FORM_DATA = { address: "" };
  const [formData, setFormData] = useState(DEFAULT_FORM_DATA);

  const [showAddPropertyModal, setShowAddPropertyModal] = useState(false);

  const handleSave = () => {
    addProperty({
      variables: { address: formData.address },
      refetchQueries: [GET_PROPERTIES],
    });

    setFormData(DEFAULT_FORM_DATA);
    setShowAddPropertyModal(false);
  };

  const handleClose = () => {
    setFormData(DEFAULT_FORM_DATA);
    setShowAddPropertyModal(false);
  };

  return (
    <>
      <Head>
        <title>Landlord Portal - Properties</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <SessionGuard accountType="LANDLORD">
          <Container>
            <Row>
              <Col>
                <h1>Landlord Portal - Properties</h1>
                <Button
                  onClick={() => {
                    setShowAddPropertyModal(true);
                  }}
                >
                  New Property
                </Button>
                <ListGroup>
                  {data?.result?.map((p, i) => (
                    <ListGroup.Item key={i}>{p.address}</ListGroup.Item>
                  ))}
                </ListGroup>
                <Modal show={showAddPropertyModal} onHide={handleClose}>
                  <Modal.Header closeButton>
                    <Modal.Title>Add Property</Modal.Title>
                  </Modal.Header>
                  <Modal.Body>
                    <Form>
                      <Form.Group className="mb-3" controlId="address">
                        <Form.Label>Address</Form.Label>
                        <Form.Control
                          type="text"
                          placeholder="Enter property address"
                          value={formData.address}
                          onChange={(e) =>
                            setFormData({
                              ...formData,
                              address: e.target.value,
                            })
                          }
                        />
                      </Form.Group>
                    </Form>
                  </Modal.Body>
                  <Modal.Footer>
                    <Button variant="secondary" onClick={handleClose}>
                      Close
                    </Button>
                    <Button variant="primary" onClick={handleSave}>
                      Save Changes
                    </Button>
                  </Modal.Footer>
                </Modal>
              </Col>
            </Row>
          </Container>
        </SessionGuard>
      </Layout>
    </>
  );
}
